parameters:
  - name: Artifacts
    type: object
    default: []
  - name: ArtifactName
    type: string
    default: 'not-specified'
  - name: DependsOn
    type: object
  - name: VerifyVersions
    type: string
    default: 'not-specified'

stages:
  # The signing stage is responsible for submitting binaries to ESRP for our official signing
  # where appropriate and also meeting any other signing requirements for particular artifacts,
  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing
  # is protected by an approval check but this may be removed in the future.
  - stage: Signing
    dependsOn: ${{parameters.DependsOn}}
    jobs:
      - job: SignPackage
        timeoutInMinutes: 20
        pool:
          name: azsdk-pool-mms-win-2022-general
          image: azsdk-pool-mms-win-2022-1espt
          os: windows
        steps:
          - checkout: self

          - checkout: azure-sdk-build-tools
            path: azure-sdk-build-tools

          - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
            parameters:
              SkipCheckoutNone: true
              Repositories:
                - Name: Azure/azure-sdk-for-android
                  Commitish: $(Build.SourceVersion)
                  WorkingDirectory: $(Pipeline.Workspace)/azure-sdk-for-android

          - download: current
            displayName: 'Download Artifact: ${{parameters.ArtifactName}}'
            artifact: ${{parameters.ArtifactName}}

          - template: /tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools
            parameters:
              Artifacts: ${{parameters.Artifacts}}
              ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}

          # Publish the ESRP signed directory. This will still be used by the
          # Dev feed publish.
          - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
            parameters:
              ArtifactPath: $(Pipeline.Workspace)/${{parameters.ArtifactName}}
              ArtifactName: ${{parameters.ArtifactName}}-signed

          # Downloading the ESRP signed artifacts
          - download: current
            displayName: 'Download Signed Artifacts'
            artifact: ${{parameters.ArtifactName}}-signed

          # Unfortunately, the way single libraries publishing works with ESRP is that only
          # what's being published can be in the directory. gpg sign and flatten needs to be
          # done for each artifact and the resulting directory is filtered by the groupId and
          # artifactId. The flattened directory needs to have the artifact name in it to be
          # unique since each publish task only publishes a single library.
          - ${{ each artifact in parameters.Artifacts }}:
            - template: tools/gpg/gpg.yml@azure-sdk-build-tools
            - template: /eng/pipelines/templates/steps/gpg-sign-and-flatten.yml
              parameters:
                ArtifactID: ${{artifact.name}}
                GroupID: ${{artifact.groupId}}
                ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed
                OutputDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-${{artifact.name}}-esrp-gpg-signed
                FlattenedESRPDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-${{artifact.name}}-esrp-flattened
                # Note: In spite of the fact that the variable is named JavaRepoRoot, the
                # root needs to be the root of the android repository. This template, like many
                # of the release steps and scripts, is copied from Java.
                JavaRepoRoot: $(Pipeline.Workspace)/azure-sdk-for-android

            # The packages-esrp-gpg-signed will be used for the ESRP publish for Android which
            # is still a single library publish and doesn't require the flattened directory
            - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
              parameters:
                ArtifactPath: '$(Pipeline.Workspace)/${{parameters.ArtifactName}}-${{artifact.name}}-esrp-flattened'
                ArtifactName: '${{parameters.ArtifactName}}-${{artifact.name}}-esrp-flattened'

  # We generate two interdependent stages for each artifact listed in the ci.yml file, creates the release
  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they
  # effectively burn the version number. For testing of packages prior to burning the version number -
  # the Validation step below publishes a package to a "burner" feed which is cleaned up after the
  # pipeline completes.
  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:
    - ${{ each artifact in parameters.Artifacts }}:
      - stage: Release_${{artifact.safeName}}
        displayName: 'Release: ${{artifact.name}}'
        dependsOn: Signing
        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-android-pr'))
        jobs:
          - job: TagRepository
            displayName: "Create release tag"
            condition: ne(variables['Skip.TagRepository'], 'true')
            timeoutInMinutes: 5
            dependsOn:
              - ${{ if eq(parameters.VerifyVersions, 'true')}}:
                - VerifyReleaseVersion

            pool:
              name: azsdk-pool-mms-win-2022-general
              image: azsdk-pool-mms-win-2022-1espt
              os: windows
            steps:
              - checkout: self
              - download: current
                displayName: 'Download Artifact: ${{parameters.ArtifactName}}-signed'
                artifact: ${{parameters.ArtifactName}}-signed
              - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml
                parameters:
                  ArtifactLocation: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.safeName}}
                  PackageRepository: Maven
                  ReleaseSha: $(Build.SourceVersion)

          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:
            - deployment: PublishESRPPackage
              displayName: "Publish to Maven Central via ESRP"
              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))
              environment: maven
              dependsOn: TagRepository

              templateContext:
                type: releaseJob
                isProduction: true
                inputs:
                - input: pipelineArtifact
                  artifactName: '${{parameters.ArtifactName}}-${{artifact.name}}-esrp-flattened'
                  targetPath: '$(Pipeline.Workspace)/${{parameters.ArtifactName}}-${{artifact.name}}-esrp-flattened'

              pool:
                name: azsdk-pool-mms-win-2022-general
                image: azsdk-pool-mms-win-2022-1espt
                os: windows
              strategy:
                runOnce:
                  deploy:
                    steps:
                      - template: /eng/pipelines/templates/steps/java-esrp-publishing.yml
                        parameters:
                          FlattenedDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-${{artifact.name}}-esrp-flattened

          - ${{if ne(artifact.options.skipPublishDocs, 'true')}}:
            - job: PublishDocs
              displayName: Publish Docs to GitHubIO Blob Storage
              condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
              dependsOn: PublishESRPPackage

              pool:
                name: azsdk-pool-mms-win-2022-general
                image: azsdk-pool-mms-win-2022-1espt
                os: windows

              steps:
                - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
                - download: current
                  displayName: 'Download Artifact: ${{parameters.ArtifactName}}-signed'
                  artifact: ${{parameters.ArtifactName}}-signed
                  patterns: ${{artifact.safeName}}/**
                - pwsh: |
                    Get-ChildItem -Recurse $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.safeName}}
                  workingDirectory: $(Pipeline.Workspace)
                  displayName: Output Visible Artifacts
                - template: /eng/common/pipelines/templates/steps/publish-blobs.yml
                  parameters:
                    FolderForUpload: '$(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.safeName}}'
                    TargetLanguage: 'android'
                    ArtifactLocation: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.safeName}}
